// Generated by CoffeeScript 1.7.1
(function() {
  var wasPausedByInput;

  window.toggleSubtitles = function() {
    $('#comment-container').css('display', 'none');
    $('.icon-comment').removeClass('on');
    if ($('.icon-quote-left').hasClass('on')) {
      $('.icon-quote-left').removeClass('on');
    } else {
      $('.icon-quote-left').addClass('on');
    }
    return $('#subtitle-container').slideToggle({
      duration: 400,
      complete: function() {
        return util.maintainAspect();
      }
    });
  };

  window.toggleComments = function() {
    $('#subtitle-container').css('display', 'none');
    $('.icon-quote-left').removeClass('on');
    if ($('.icon-comment').hasClass('on')) {
      $('.icon-comment').removeClass('on');
    } else {
      $('.icon-comment').addClass('on');
    }
    return $('#comment-container').slideToggle({
      duration: 400,
      complete: function() {
        $('comment-container').css('display', 'none');
        return util.maintainAspect();
      }
    });
  };

  wasPausedByInput = false;

  window.toggleInput = function() {

    /*
    if not timeline.paused()
      timeline.pause()
      wasPausedByInput = true
    else if wasPausedByInput
      timeline.play()
      wasPausedByInput = false
    else
      wasPausedByInput = false
    
    $('#inputTextArea').val('')
    console.log('toggle comment input')
    $('#input-container').animate
      width: "toggle"
      duration: 400
      complete: ->
        if $('#input-container').css('display') is 'block'
          $('#input-container').css('display', 'none') 
        else
          $('#input-container').css('display', 'block')
     */
  };

  window.submitInput = function() {
    var comment, text, timestamp, username;
    username = 'testuser';
    timestamp = timeline.currentTimelineURI();
    text = $('#input-field').val();
    $('#input-field').val('');
    comment = {
      username: 'testuser',
      timestamp: timestamp,
      text: text,
      display: 'true'
    };
    timeline.play();
    return $.ajax({
      type: "POST",
      url: "/comments",
      data: JSON.stringify(comment),
      contentType: "application/json; charset=utf-8",
      dataType: "json",
      success: function() {
        return alert('successful post');
      }
    });
  };

  window.submitConfusion = function() {
    var timestamp, totalLength;
    timestamp = timeline.currentTimelineURI();
    totalLength = timeline.totalDuration;
    console.log(totalLength);
    return $.ajax({
      type: "POST",
      url: "/confusion",
      data: JSON.stringify({
        timestamp: timestamp,
        totalLength: totalLength
      }),
      contentType: "application/json; charset=utf-8",
      dataType: "json",
      success: function() {
        return alert('successful post');
      }
    });
  };

  window.deleteComment = function() {
    var updateParameters;
    updateParameters = {
      selector: {
        "text": $('.message').text()
      }
    };
    console.log('updateParameters', updateParameters);
    return $.ajax({
      type: "POST",
      url: "/delete",
      data: JSON.stringify(updateParameters),
      contentType: "application/json; charset=utf-8",
      dataType: "json",
      success: function() {
        return alert('successful post');
      }
    });
  };

  window.toggleVolume = function() {
    console.log("toggling volume");
    if (!video_playing.muted) {
      video_playing.mute();
      video_playing.muted = true;
      return $("#slider-vertical").slider({
        value: 0
      });
    } else {
      video_playing.fullvolume();
      video_playing.muted = false;
      return $("#slider-vertical").slider({
        value: 100
      });
    }
  };

  $(function() {
    var addCallback, displayComment, getComments, hasCallback, hideComment, left, reportOnDeck, timeline;
    util.maintainAspect();
    window.sceneController = new lessonplan.SceneController(sceneList);
    timeline = new lessonplan.Timeline('#timeline-controls', window.sceneController);
    if ((window.showSubtitles != null) && window.showSubtitles) {
      window.toggleSubtitles();
    }
    left = 140;
    $('#charactersLeft').text(left);
    $('#inputTextArea').keyup(function() {
      left = 140 - $(this).val().length;
      return $('#charactersLeft').text(left);
    });
    $('.hideUntilMouseOver').hide();
    $('#first, #second, #third').mouseenter(function() {
      return $(this).find('.hideUntilMouseOver').show();
    });
    $('#first, #second, #third').mouseleave(function() {
      return $(this).find('.hideUntilMouseOver').hide();
    });
    $('#input-field').keypress(function(e) {
      if (e.which === 13) {
        return submitInput();
      }
    });
    hasCallback = [];
    hideComment = function() {
      console.log('deleting');
      return $('.comments div:first').remove();
    };
    displayComment = function(comment) {
      if (comment['display'] === 'true') {
        $('#first .message').text($('#second .message').text());
        $('#first .userAndTime').text($('#second .userAndTime').text());
        $('#second .message').text($('#third .message').text());
        $('#second .userAndTime').text($('#third .userAndTime').text());
        $('#third .message').text(comment['text']);
        return $('#third .userAndTime').text(comment['username'] + ' @ ' + new Date().toDateString());
      }
    };
    addCallback = function(comments) {
      var comment, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = comments.length; _i < _len; _i++) {
        comment = comments[_i];
        if (hasCallback.indexOf(JSON.stringify(comment)) === -1) {
          timeline.atTimelineURI(comment['timestamp'], (function(comment) {
            return function() {
              return displayComment(comment);
            };
          })(comment));
          _results.push(hasCallback.push(JSON.stringify(comment)));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
    getComments = function() {
      return $.ajax({
        type: "GET",
        url: "/comments",
        dataType: "json",
        success: function(comments) {
          console.log('successful comments get');
          addCallback(comments);
        }
      });
    };
    getComments();
    setInterval(getComments, 1000);
    $("#slider-vertical").slider({
      orientation: "vertical",
      range: "min",
      min: 0,
      max: 100,
      value: 95,
      slide: function(event, ui) {
        console.log(ui);
        video_playing.muted = false;
        return video_playing.changevolume(ui.value / 100);
      }
    });
    $(".icon-volume-down").on({
      mouseenter: function() {
        return $(".ui-slider-vertical").show();
      },
      mouseleave: function() {
        return $(".ui-slider-vertical").hide();
      }
    });
    $(".ui-slider-vertical").on({
      mouseenter: function() {
        return $(".ui-slider-vertical").show();
      },
      mouseleave: function() {
        return $(".ui-slider-vertical").hide();
      }
    });
    console.log("~~~~~~~~~ REPORT ON DECK ~~~~~~~~~~~~~");
    reportOnDeck = function(ondecks) {
      return console.log(ondecks);
    };
    timeline.onNewOnDeckURIs(reportOnDeck);
    $(".ui-slider-vertical").hide();
    return window.timeline = timeline;
  });

}).call(this);
